
<div class = "container">
  <div class = "row">
      <div class = "col-lg-12">
        <div class = "col-md-4">
          <%= render '/shared/portfolioCondition' %>
        </div>
        <div class = "col-md-8">
          <div class = "well">
            <!-- A space to chart the value of the current_user's stocks over time -->
            <!-- User should select the stock they wish to view the chart for -->
            <h4 class = "text-center">Stocks owned by <%= current_user.portfolio.first_name %></h4>
            
            <!-- Array of unique stock symbols owned by current user -->
            <% array_of_stocks = [] %>
            <% array_of_stocks = Stock.where(portfolio_id: current_user.portfolio.id).pluck(:symbol).uniq %>
            
            <!-- Search database for transactors whose stocks are owned by current user, making sure to limit the return date to just 
            sold_on and price_per. I then store that information as a json hash and use a content tag to send information to js file
            which then plots the chart. -->
            
            <!-- I'd like for the default chart displayed to be the most valuable stock at the time. To determine this, while iterating
            through each of the stocks owned by current user I will save the most valuable one as a variable mvs. When a more valuable stock
            is found the mvs is replaced and the interation continues until all stocks are tested. msv = Most Valuable Stock -->
            <% mvs = nil %>
            <% mvs_value = 0 %>
            <% array_of_stocks.each do |stockSym| %>
              <% id_string = 'transactor_chart_' + stockSym %>
              <!-- Store a hash of the transactors' sold_on and price_per values -->
              <% @trans = Transactor.where(stock_symbol: stockSym).select(:sold_on, :price_per).order(:sold_on) %>
              <% if mvs = !nil %>
              
                <%# if mvs is not nil. Then we need to test whether mvs-value is more than the new price_per. If it is we continue as normal
                if not mvs-value becomes what ever the price_per value is. %>
                <% price_test = @trans.last.price_per %>
                <% if price_test > mvs_value %>
                  <% mvs = stockSym %>
                  <% mvs_value = price_test %>
                <% end %>
                
              <% else %>
                <% mvs = stockSym %>
                <% mvs_value = @trans.order(:sold_on).last.price_per %>
              <% end %>
              
              <% @trans.as_json.map(&:symbolize_keys) %>
              <%= content_tag :div, '', id: id_string, data: {transactors: @trans}%>
            <% end %>
            <%# now i have the most valuable stock symbol which is store in mvs %>
            <%= content_tag :div, '', id: 'mvs-string-tag', data: mvs %>
           
           
           
            <!-- Select box whose options are the unique stock symbols owned by current_user -->
            <select id = "select-a-stock">
              <option value="" selected disabled hidden>Select Stock</option>
              <% for i in 0..array_of_stocks.length - 1 %>
                <option><%= array_of_stocks[i] %></option>
              <% end %>
            </select>
            
            <!-- What should the deafult chart thats displayed be????? -->
            
            
            
            
            <!-- Output chart here. Morris js requires the height parameter to be included -->
            <div id = 'chart-output' style="height: 250px;"></div>
            
          
          </div>
          <h4 class = "text-center well" id = 'on-the-rise'>Here will be a table(graph) of net_worth over time</h4>
          <h4 class = "text-center well">And here is a link to create a purchase or sale
          <!-- Here is a link to a form to create a marketplace transaction (object: onthemarket) -->
          <%= link_to "Create a marketplace transaction", new_user_portfolio_onthemarket_path(user_id: params[:id]) %>
          
          <br/>
          <%= link_to "Purchase stocks on the marketpalce", new_user_portfolio_onthemarket_path(buying: true, user_id: params[:id]), class: 'btn btn-success btn-lg btn-block' %>
          <br/>
          <br/>
          <% if current_user.portfolio.stocks.length != 0 %>
            <%= link_to "Sell stocks from your portfolio", new_user_portfolio_onthemarket_path(buying: false, user_id: params[:id]), class: 'btn btn-success btn-lg' %></h4>
          <% end %>
          <h4 class = "text-center well"> And here will be the stocks drop down menu</h4>
        </div>
      </div>
    </div>
  </div>
</div>